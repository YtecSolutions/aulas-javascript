"use strict";

// Sobre Fun√ß√µes

/* Fun√ß√µes s√£o blocos de c√≥digo que podem ser executados e reaproveitados em praticamente qualquer lugar de aplica√ß√£o/site */

// Usar fun√ß√µes tamb√©m √© ben√©fico no ponto de vista de organiza√ß√£o de c√≥digo. 

// O JS j√° possui centaenas de fun√ß√µes prontas:

/* Exemplos: log(), alert(), prompt(), toFixed etc... */

// Forma 1: fun√ß√£o an√¥nima

const exemplo1 = function () {
    console.log("Fun√ß√£o an√¥nima");
}


// Forma 2 =  Fun√ß√£o nomeada/declarada

function exemplo2() {
    console.log("Fun√ß√£o nomeada/declarada");
};

// Forma 3: arrow function 

const exemplo3 = () => {
    console.log(("Arrow Function"));
};
//chamada de fun√ß√£o

exemplo1();
exemplo2();
exemplo3();
console.log("_ ___________________ _ üôÇ");
// valor1 e valor2 s√£o par√¢metros

// Fun√ß√£o com par√¢metros e retorno de dados/resultados
function somar(valor1, valor2) {
   return valor1 + valor2; // retorno de dados
}
console.log(somar(10, 20));
console.log(somar(15, 50));
console.log(somar(30, 47.8));

console.log("_______________________ üòÉ");

// Formata√ß√£o de valores em Reais

let preco = 1000;
let desconto = preco * 0.10;
let precoFinal = preco - desconto;

console.log(`Preco: ${preco.toLocaleString()}`);
console.log(`Desconto: ${desconto.toLocaleString()}`);
console.log(`Pre√ßo final: ${precoFinal.toLocaleString()}`);







